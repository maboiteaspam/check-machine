{"name":"Check-machine","tagline":"Check machine properties over ssh","body":"# check-machine\r\n\r\nCheck machine properties over ssh\r\n\r\n## Install\r\n\r\n    npm i check-machine -g\r\n\r\n## Usage\r\n\r\n`check-machine` is a binary to install globally,\r\nit expects that a file `check-machine.js` exists on `cwd`,\r\n\r\n```bash\r\ncheck-machine 1.0.0\r\n\r\n    Usage\r\n        check-machine [opts] -- [machine] [constraint1 constraint2 constraint3 ...]\r\n        check-machine [machine] [constraint1 constraint2 constraint3 ...]\r\n\r\n    Options\r\n        -v verbose\r\n        -h help\r\n\r\n    Examples\r\n        check-machine lb1 lb\r\n        check-machine lb2 lb\r\n        check-machine web2 web db redis\r\n```\r\n\r\n__check-machine.js__\r\n\r\nIs a node module which exports a function. This handler receives `argv`,\r\nreturns a configuration object of ssh `hosts` and `constraints`,\r\n\r\n```js\r\n    {\r\n    machines: {\r\n      'vagrant': ssh host\r\n    },\r\n    constraints: {\r\n      'constraint 1': function (sshConn, argv){},\r\n      'constraint 2': require(...)(...),\r\n      'constraint 3': ['constraint 1', 'constraint 2']\r\n    }\r\n  }\r\n```\r\n\r\n#### ssh host\r\n\r\nSSH hosts are plain objects\r\n\r\n```js\r\n{ host: '127.0.0.1',\r\n    port: 2222,\r\n    username: 'vagrant',\r\n    password: 'vagrant' }\r\n```\r\n\r\n#### constraint\r\n\r\nConstraints are `function (sshConn, argv)` which returns `function (next)`.\r\n```js\r\n    function notFound(sshConn, argv) {\r\n        return function (next) {\r\n            that.emit('message', {\r\n                message: 'assert',\r\n                ...\r\n            })\r\n            next('not found')\r\n        };\r\n    }\r\n```\r\n\r\nWhen constraints are require-able, they are\r\nare `function (params...)`\r\nwhich returns `function (sshConn, argv)`\r\nwhich returns `function (next)`.\r\n\r\n```js\r\nmodule.exports = function (param) {\r\n  return function (sshConn, argv) {\r\n    param = !param ? ... : ...;\r\n    return function (next) {\r\n        that.emit('message', {\r\n            message: 'assert',\r\n            ...\r\n        })\r\n        next(err, sshConn)\r\n    };\r\n  }\r\n};\r\n\r\n```\r\n\r\n#### rendering\r\n\r\nTo render the status of the test, the constraints are invoked into the context af an event emitter.\r\n\r\nConstraints are expected to `emit('message', {})` events, such\r\n\r\n```js\r\nthat.emit('message', {\r\n    message: 'assert',                          // message type\r\n    error: err,                                 // execution error\r\n    full_subject: stdout,                       // full content on which the tests is performed\r\n    subject: subject.replace(/\\n/g, ' '),       // When possible, a reduced part of the content\r\n    expected: m,                                // the expectation\r\n    description: 'check php module',            // a descriptive text for humans\r\n    result: !!subject && subject.match(m)       // a boolean indicating the result\r\n})\r\n```\r\n\r\n## More\r\n\r\n- https://github.com/maboiteaspam/check-machine/blob/master/check-machine.js\r\n- https://github.com/maboiteaspam/check-machine/blob/master/php-module.js\r\n- https://github.com/maboiteaspam/check-machine/blob/master/php-version.js\r\n- https://github.com/maboiteaspam/ssh2-utils\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}